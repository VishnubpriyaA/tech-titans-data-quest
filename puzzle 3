import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

from sklearn.linear_model import LinearRegression
df = pd.read_csv('/Hungry.csv')
df.shape
plt.scatter(df['Latitude'],df['Longitude'])
plt.xlabel("Latitude")
plt.ylabel("Longitude")
plt.show()

X = df['Latitude']
y = df['Longitude']

from sklearn.model_selection import train_test_split
X_train_lm, X_test_lm, y_train_lm, y_test_lm = train_test_split(X, y, train_size = 0.7,
                                                                test_size = 0.3, random_state = 100)
print(X_train_lm.shape)
print(X_test_lm.shape)
X_train_lm = X_train_lm.values.reshape(-1,1)
X_test_lm = X_test_lm.values.reshape(-1,1)

print(X_train_lm.shape)
print(X_test_lm.shape)
from sklearn.linear_model import LinearRegression
lm = LinearRegression()
lm.fit(X_train_lm, y_train_lm)
print("Intercept :",lm.intercept_)
print('Slope :',lm.coef_)
from sklearn.metrics import r2_score
y_train_pred = lm.predict(X_train_lm)
y_test_pred = lm.predict(X_test_lm)
print(r2_score(y_train_lm,y_train_pred))
print(r2_score(y_test_lm,y_test_pred))
plt.scatter(X_train_lm, y_train_lm)
plt.plot(X_train_lm, -85.97765626044207 + (-0.95007277)*X_train_lm, 'r')
plt.show()
from sklearn.model_selection import cross_val_score
from sklearn.model_selection import KFold
lm = LinearRegression()
scores = cross_val_score(lm, X_train_lm, y_train_lm, scoring='r2', cv=5)
scores

#actually we have to change the x and y value as id and other parameters , using preprocessing we need to transform categorical value into    numerical value but we failed
